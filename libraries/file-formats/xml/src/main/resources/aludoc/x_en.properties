# Copyright 2010-2012 Levi Hoogenberg
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: XML library
description: Reads, writes, formats, queries, and transforms XML documents.

attribute.description: Adds an attribute to an XML element.
attribute.prefix.description: The namespace prefix of the attribute.
attribute.name.description: The name of the attribute to add.
attribute.value.description: The value of the attribute to add.

dynamic_element.description: Creates an XML element that has a name that's equal to its action name. It supports \
                             dynamic parameters: for each parameter, an attribute is added to the element.

element.description: Produces an XML element, the name of which is given as a parameter. Attributes can be added by \
                     nesting attribute actions.
element.name.description: The name of the XML element to create.

format.description: Formats and writes an XML document. The document can be given both as a parameter and as a body \
                    object.
format.document.description: The document to format. 
format.indentation.description: The number of spaces that should be used for indenting the document; defaults to 4.

namespace.description: Adds a namespace to the context of an XPath expression that is used to select nodes of an XML \
                       element.
namespace.prefix.description: The prefix of the namespace to add.
namespace.url.description: The URL of the namespace to add.

parse.description: Parses its body text as an XML document and writes the resulting root element.

select.description: Executes an XPath query and writes the results. The following node types may be selected: \
                    elements, namespaces, attributes, text, and comments. Except for elements, all results will be \
                    strings. When a query leads to a single result, only that result will be written. In any other \
                    case, the result will be written as a list. XPath expressions may be given a context by using the \
                    context parameter or by nesting namespace actions.
select.element.description: The XML element to select nodes from.
select.expression.description: The XPath expression to use.
select.context.description: The XPath context to use.

selection_context.description: Creates and writes a selection context that can be used by the select action. \
                               Namespaces are added using nested namespace actions.
transform.description: Transforms a document and writes the results to the writer.
transform.document.description: The document to transform.
transform.style_sheet.description: The style sheet to use.

dynamic_attribute.description: Adds an attribute to an XML element. The library URL abbreviation will be used as \
                               namespace prefix; the name of the action contribution will become the attribute name.

namespace.contribution_description: Adds a namespace to an XML element. The library URL abbreviation will be used as \
                                    prefix; the parameter value will become the URL.

text.description: Sets the text of an XML element to the value of the parameter.